flights_1:
  query_name: flights_1
  question: What are the average delays for various reasons like carrier, weather, NAS, security, lateaircraft? Display as delaytype and avgdelay.
  golden_query: SELECT 'Carrier' AS delaytype, AVG(carrierdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL SELECT 'Weather' AS delaytype, AVG(weatherdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL SELECT 'NAS' AS delaytype, AVG(nasdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL SELECT 'Security' AS delaytype, AVG(securitydelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL ( SELECT 'LateAircraft' AS delaytype, AVG(lateaircraftdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp )
  comparison_rules:
  - columns:
    - delaytype
    - avgdelay
    match: oneof
  auto_select_schema: 'false'
  schemas:
  - flights
flights_2:
  query_name: flights_2
  question: what is the trend for the number of delayed flights on arrival by year? Display as year and num_delayed_flights.
  golden_query: SELECT     year,     COUNT(*) AS num_delayed_flights FROM tweakit_perf_db.flights.flightperformance AS fp WHERE     arrdelay > 0 GROUP BY     year ORDER BY     year
  comparison_rules:
  - columns:
    - year
    - num_delayed_flights
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_3:
  query_name: flights_3
  question: Do older planes suffer more arrival delays? Display unique plane_year and avg_delay_per_year.
  golden_query: WITH planeage AS (     SELECT         tailnum,         year     FROM tweakit_perf_db.flights.planedata ),  avgdelay AS (     SELECT         tailnum,         AVG(arrdelay) AS average_delay     FROM tweakit_perf_db.flights.flightperformance     GROUP BY         tailnum )  SELECT     year AS plane_year,     AVG(average_delay) AS avg_delay_per_year FROM planeage AS pa INNER JOIN avgdelay AS ad     ON pa.tailnum = ad.tailnum GROUP BY     year ORDER BY     year
  comparison_rules:
  - columns:
    - plane_year
    - avg_delay_per_year
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_4:
  query_name: flights_4
  question: How does the number of people flying between different locations change over time? Sort by year, month, origin, destination. Display as origin, origin_city, dest, destination_city, year, month, num_flights. Show 100 rows.
  golden_query: WITH flightcounts AS (SELECT origin,dest,year,month,COUNT(*) AS num_flights FROM tweakit_perf_db.flights.flightperformance AS fp GROUP BY origin,dest,year,month) SELECT origin,o.city AS origin_city,dest,d.city AS destination_city,year,month,num_flights FROM flightcounts AS fc INNER JOIN tweakit_perf_db.flights.airports AS o ON origin = o.iata INNER JOIN tweakit_perf_db.flights.airports AS d ON dest = d.iata ORDER BY year,month,origin,dest limit 100;
  comparison_rules:
  - columns:
    - origin
    - origin_city
    - dest
    - destination_city
    - year
    - month
    - num_flights
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_5:
  query_name: flights_5
  question: Show me the flight delays by carrier and month. Consider both arrival and departure delays. Display as carrier, description, month, average_delay Show 100 rows.
  golden_query: WITH carrierdelays AS (     SELECT         uniquecarrier,         month,         AVG(arrdelay + depdelay) AS average_delay     FROM tweakit_perf_db.flights.flightperformance AS fp     GROUP BY         uniquecarrier,         month )  SELECT     uniquecarrier as carrier,     description,     month,     average_delay FROM carrierdelays AS cd INNER JOIN tweakit_perf_db.flights.carriers AS c     ON uniquecarrier = code ORDER BY     uniquecarrier,     month limit 100
  comparison_rules:
  - columns:
    - description
    - month
    - average_delay
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_6:
  query_name: flights_6
  question: Top 5 busiest airports by flight count. Display as airport, total_flights.
  golden_query: WITH TOTAL_FLIGHTS AS (SELECT ORIGIN AS AIRPORT, COUNT(*) AS C FROM FLIGHTPERFORMANCE GROUP BY ORIGIN UNION ALL SELECT DEST AS AIRPORT, COUNT(*) AS C FROM FLIGHTPERFORMANCE GROUP BY DEST) SELECT AIRPORT as AIRPORT, SUM(C) AS TOTAL_FLIGHTS FROM TOTAL_FLIGHTS GROUP BY AIRPORT ORDER BY TOTAL_FLIGHTS DESC LIMIT 5;
  comparison_rules:
  - columns:
    - airport
    - total_flights
    match: oneof
  auto_select_schema: 'false'
  schemas:
  - flights
flights_7:
  query_name: flights_7
  question: What are the aircraft types that are most prone to delays (e.g arrival delay, departure delay, carrier delay, weather delay, nasdelay, security delay, carrier delay)? Display as type. Display top 1 row.
  golden_query: select p.aircraft_type as type, sum(arrdelay + depdelay + carrierdelay + weatherdelay + nasdelay + securitydelay + lateaircraftdelay) as total_delay from flightperformance as fp  inner join planedata as p on p.tailnum = fp.tailnum group by p.aircraft_type order by total_delay desc limit 1
  comparison_rules:
  - columns:
    - type
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_8:
  query_name: flights_8
  question: What are the most common destination states for each carrier? Display as carrier, state. Sort by carrier. Show 100 rows.
  golden_query: WITH CARRIERDESTINATIONS AS (SELECT DESCRIPTION AS CARRIER, STATE, COUNT(*) AS FLIGHTS_COUNT FROM TWEAKIT_PERF_DB.FLIGHTS.FLIGHTPERFORMANCE AS FP INNER JOIN TWEAKIT_PERF_DB.FLIGHTS.CARRIERS AS C ON UNIQUECARRIER = CODE INNER JOIN TWEAKIT_PERF_DB.FLIGHTS.AIRPORTS AS A ON DEST = IATA GROUP BY DESCRIPTION, STATE), RANKEDSTATES AS (SELECT CARRIER, STATE, FLIGHTS_COUNT, RANK() OVER (PARTITION BY CARRIER ORDER BY FLIGHTS_COUNT DESC) AS RANK FROM CARRIERDESTINATIONS) SELECT CARRIER, STATE FROM RANKEDSTATES WHERE RANK = 1 ORDER BY CARRIER;
  comparison_rules:
  - columns:
    - carrier
    - state
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_9:
  query_name: flights_9
  question: What are the cancellation Rates by carrier and month? Display as carrier_code, description, month, cancellation_rate.
  golden_query: select UNIQUECARRIER as carrier_code, month, (sum(case when cancelled=1 then 1 else 0 end ) / count(*)) * 100 as cancelled_rate   from FLIGHTPERFORMANCE group by UNIQUECARRIER, month order by cancelled_rate desc;
  comparison_rules:
  - columns:
    - carrier_code
    - month
    - cancelled_rate
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_10:
  query_name: flights_10
  question: What are the monthly trend of average delays for the carriers? Display as carrier, month and avgDelay.
  golden_query: select UNIQUECARRIER as carrier, month, avg(ARRDELAY + depdelay) as avgDelay from FLIGHTPERFORMANCE group by uniquecarrier, month order by avgDelay desc
  comparison_rules:
  - columns:
    - month
    - avgDelay
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_11:
  query_name: flights_11
  question: What are the top 3 most common aircraft models for each airline? Display as description, model, total_flights.
  golden_query: select c.description as description, a.model as model, a.total_flights as total_flights  from (select UNIQUECARRIER, model, total_flights, row_number() over (partition by UNIQUECARRIER order by total_flights desc) as r from (select fp.UNIQUECARRIER, p.model, count(*) as total_flights  from FLIGHTPERFORMANCE fp inner join PLANEDATA p on p.TAILNUM = fp.TAILNUM group by fp.uniquecarrier, p.model)) a inner join carriers c on c.code = a.uniquecarrier where r <=3;
  comparison_rules:
  - columns:
    - description
    - model
    - total_flights
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_12:
  query_name: flights_12
  question: What is the yearly change in flight volumes for each carrier? Display as uniquecarrier, year, this_year_vol, yearly_change.
  golden_query: select uniquecarrier, year, this_year_vol, (this_year_vol - prev_year_vol) as yearly_change from (select UNIQUECARRIER, year, count(*) as this_year_vol, LAG(count(*)) OVER(PARTITION BY UNIQUECARRIER ORDER BY YEAR) as prev_year_vol from FLIGHTPERFORMANCE group by uniquecarrier, year);
  comparison_rules:
    - columns:
        - uniquecarrier
        - YEAR
        - THIS_YEAR_VOL
        - YEARLY_CHANGE
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_13:
  query_name: flights_13
  question: What are the top 5 busiest travel days of the year? Display as year, month, dayofmonth, total_flights.
  golden_query: select year, month, dayofmonth, count(*) as total_flights from FLIGHTPERFORMANCE group by year, month, dayofmonth order by total_flights desc limit 5;
  comparison_rules:
    - columns:
        - '*'
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_14:
  query_name: flights_14
  question: How have flight volumes and delays (arrival delay and depature delays) changed Year-over-Year for each Carrier? Display uniquecarrier, year, this_year_vol, yearly_change, yaerly_change_delay.
  golden_query: SELECT UNIQUECARRIER, YEAR, THIS_YEAR_VOL, (THIS_YEAR_VOL - PREV_YEAR_VOL) AS YEARLY_CHANGE, (THIS_YEAR_DELAY - PREV_YEAR_AVG_DELAY) AS YEARLY_CHANGE_DELAY FROM (SELECT UNIQUECARRIER, YEAR, COUNT(*) AS THIS_YEAR_VOL, LAG(COUNT(*)) OVER(PARTITION BY UNIQUECARRIER ORDER BY YEAR) AS PREV_YEAR_VOL, AVG(ARRDELAY + DEPDELAY) AS THIS_YEAR_DELAY, LAG(AVG(ARRDELAY + DEPDELAY)) OVER (PARTITION BY UNIQUECARRIER ORDER BY YEAR) AS PREV_YEAR_AVG_DELAY FROM FLIGHTPERFORMANCE GROUP BY UNIQUECARRIER, YEAR);
  comparison_rules:
    - columns:
        - '*'
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_15:
  query_name: flights_15
  question: Which Airlines Have the Highest Frequency of Cancellations? Display as carrier, total_cancelled.
  golden_query: select uniquecarrier, sum(case when CANCELLED=1 then 1 else 0 end) as total_cancelled from FLIGHTPERFORMANCE group by uniquecarrier order by total_cancelled desc;
  comparison_rules:
    - columns:
        - total_cancelled
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
