flights_1:
  query_name: flights_1
  question: What are the average delays for various reasons like carrier, weather, NAS, security, lateaircraft? Display as delaytype and avgdelay.
  golden_query: SELECT 'Carrier' AS delaytype, AVG(carrierdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL SELECT 'Weather' AS delaytype, AVG(weatherdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL SELECT 'NAS' AS delaytype, AVG(nasdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL SELECT 'Security' AS delaytype, AVG(securitydelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp UNION ALL ( SELECT 'LateAircraft' AS delaytype, AVG(lateaircraftdelay) AS avgdelay FROM tweakit_perf_db.flights.flightperformance AS fp )
  comparison_rules:
  - columns:
    - delaytype
    - avgdelay
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_2:
  query_name: flights_2
  question: what is the trend for the number of delayed flights on arrival by year? Display as year and num_delayed_flights.
  golden_query: SELECT     year,     COUNT(*) AS num_delayed_flights FROM tweakit_perf_db.flights.flightperformance AS fp WHERE     arrdelay > 0 GROUP BY     year ORDER BY     year
  comparison_rules:
  - columns:
    - year
    - num_delayed_flights
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_3:
  query_name: flights_3
  question: Do older planes suffer more arrival delays? Consider arrival and departure delays. Average delay should be computed as the sum of arrival delay and departure delay. It should not be computed as the average of two values. Display unique plane_year and avg_delay_per_year.
  golden_query: WITH planedelays AS ( SELECT tailnum, AVG(arrdelay + depdelay) AS avg_delay FROM tweakit_perf_db.flights.flightperformance AS fp GROUP BY tailnum ), planeyears AS ( SELECT DISTINCT tailnum, year AS plane_year FROM tweakit_perf_db.flights.planedata AS pd ) SELECT plane_year, AVG(avg_delay) AS avg_delay_per_year FROM planedelays AS pd INNER JOIN planeyears AS py ON pd.tailnum = py.tailnum GROUP BY plane_year ORDER BY plane_year
  comparison_rules:
  - columns:
    - plane_year
    - avg_delay_per_year
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_4:
  query_name: flights_4
  question: How does the number of people flying between different locations change over time? Sort by year, month, origin, destination. Display as origin, origin_city, dest, destination_city, year, month, num_flights. Show 100 rows.
  golden_query: WITH flightcounts AS (SELECT origin,dest,year,month,COUNT(*) AS num_flights FROM tweakit_perf_db.flights.flightperformance AS fp GROUP BY origin,dest,year,month) SELECT origin,o.city AS origin_city,dest,d.city AS destination_city,year,month,num_flights FROM flightcounts AS fc INNER JOIN tweakit_perf_db.flights.airports AS o ON origin = o.iata INNER JOIN tweakit_perf_db.flights.airports AS d ON dest = d.iata ORDER BY year,month,origin,dest limit 100;
  comparison_rules:
  - columns:
    - origin
    - origin_city
    - dest
    - destination_city
    - year
    - month
    - num_flights
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_5:
  query_name: flights_5
  question: Show me the flight delays by carrier and month. Consider both arrival and departure delays. Average delay should be computed as the sum of arrival delay and departure delay. It should not be computed as the average of two values. Display as carrier, description, month, average_delay. Show 100 rows.
  golden_query: WITH carrierdelays AS (     SELECT         uniquecarrier,         month,         AVG(arrdelay + depdelay) AS average_delay     FROM tweakit_perf_db.flights.flightperformance AS fp     GROUP BY         uniquecarrier,         month )  SELECT     uniquecarrier as carrier,     description,     month,     average_delay FROM carrierdelays AS cd INNER JOIN tweakit_perf_db.flights.carriers AS c     ON uniquecarrier = code ORDER BY     uniquecarrier,     month limit 100
  comparison_rules:
  - columns:
    - description
    - month
    - average_delay
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_6:
  query_name: flights_6
  question: Top 5 busiest airports by flight count. Display as airport, total_flights.
  golden_query: WITH TOTAL_FLIGHTS AS (SELECT ORIGIN AS AIRPORT, COUNT(*) AS C FROM FLIGHTPERFORMANCE GROUP BY ORIGIN UNION ALL SELECT DEST AS AIRPORT, COUNT(*) AS C FROM FLIGHTPERFORMANCE GROUP BY DEST) SELECT AIRPORT as AIRPORT, SUM(C) AS TOTAL_FLIGHTS FROM TOTAL_FLIGHTS GROUP BY AIRPORT ORDER BY TOTAL_FLIGHTS DESC LIMIT 5;
  comparison_rules:
  - columns:
    - airport
    - total_flights
    match: oneof
  auto_select_schema: 'false'
  schemas:
  - flights
flights_7:
  query_name: flights_7
  question: What are the aircraft types that are most prone to delays (i.e sum of arrival delay, departure delay, carrier delay, weather delay, nasdelay, security delay, carrier delay)? Display as type. Display top 1 row.
  golden_query: select p.aircraft_type as type, sum(arrdelay + depdelay + carrierdelay + weatherdelay + nasdelay + securitydelay + lateaircraftdelay) as total_delay from flightperformance as fp  inner join planedata as p on p.tailnum = fp.tailnum group by p.aircraft_type order by total_delay desc limit 1
  comparison_rules:
  - columns:
    - type
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_8:
  query_name: flights_8
  question: What are the most common destination states for each carrier? Display as carrier, state. Sort by carrier. Show 100 rows.
  golden_query: WITH CARRIERDESTINATIONS AS (SELECT DESCRIPTION AS CARRIER, STATE, COUNT(*) AS FLIGHTS_COUNT FROM TWEAKIT_PERF_DB.FLIGHTS.FLIGHTPERFORMANCE AS FP INNER JOIN TWEAKIT_PERF_DB.FLIGHTS.CARRIERS AS C ON UNIQUECARRIER = CODE INNER JOIN TWEAKIT_PERF_DB.FLIGHTS.AIRPORTS AS A ON DEST = IATA GROUP BY DESCRIPTION, STATE), RANKEDSTATES AS (SELECT CARRIER, STATE, FLIGHTS_COUNT, RANK() OVER (PARTITION BY CARRIER ORDER BY FLIGHTS_COUNT DESC) AS RANK FROM CARRIERDESTINATIONS) SELECT CARRIER, STATE FROM RANKEDSTATES WHERE RANK = 1 ORDER BY CARRIER;
  comparison_rules:
  - columns:
    - carrier
    - state
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_9:
  query_name: flights_9
  question: What are the cancellation Rates by carrier and month? Display as carrier_code, description, month, cancellation_rate.
  golden_query: select UNIQUECARRIER as carrier_code, month, (sum(case when cancelled=1 then 1 else 0 end ) / count(*)) * 100 as cancelled_rate   from FLIGHTPERFORMANCE group by UNIQUECARRIER, month order by cancelled_rate desc;
  comparison_rules:
  - columns:
    - carrier_code
    - month
    - cancelled_rate
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_10:
  query_name: flights_10
  question: What are the monthly trend of average delays for the carriers? Include both arrival and departure delays. Average delay should be computed as the sum of arrival delay and departure delay. It should not be computed as the average of two values. Display as carrier, month and avgDelay.
  golden_query: select UNIQUECARRIER as carrier, month, avg(ARRDELAY + depdelay) as avgDelay from tweakit_perf_db.flights.FLIGHTPERFORMANCE group by uniquecarrier, month order by avgDelay desc
  comparison_rules:
  - columns:
    - month
    - avgDelay
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_11:
  query_name: flights_11
  question: What are the top 3 most common aircraft models for each airline? Display as description, model, total_flights.
  golden_query: select c.description as description, a.model as model, a.total_flights as total_flights  from (select UNIQUECARRIER, model, total_flights, row_number() over (partition by UNIQUECARRIER order by total_flights desc) as r from (select fp.UNIQUECARRIER, p.model, count(*) as total_flights  from FLIGHTPERFORMANCE fp inner join PLANEDATA p on p.TAILNUM = fp.TAILNUM group by fp.uniquecarrier, p.model)) a inner join carriers c on c.code = a.uniquecarrier where r <=3;
  comparison_rules:
  - columns:
    - description
    - model
    - total_flights
    match: exact
  auto_select_schema: 'false'
  schemas:
  - flights
flights_12:
  query_name: flights_12
  question: What is the yearly change in flight volumes for each carrier? Include cases where previous year volume is null as well. Display as uniquecarrier, year, this_year_vol, yearly_change.
  golden_query: select uniquecarrier, year, this_year_vol, (this_year_vol - prev_year_vol) as yearly_change from (select UNIQUECARRIER, year, count(*) as this_year_vol, LAG(count(*)) OVER(PARTITION BY UNIQUECARRIER ORDER BY YEAR) as prev_year_vol from FLIGHTPERFORMANCE group by uniquecarrier, year);
  comparison_rules:
    - columns:
        - uniquecarrier
        - YEAR
        - THIS_YEAR_VOL
        - YEARLY_CHANGE
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_13:
  query_name: flights_13
  question: What are the top 5 busiest airports of the year? Consider departure and arrival of flights. Display as airports, total_traffic.
  golden_query: WITH departuretraffic AS ( SELECT origin AS airport, COUNT(*) AS departures FROM tweakit_perf_db.flights.flightperformance GROUP BY origin ), arrivaltraffic AS ( SELECT dest AS airport, COUNT(*) AS arrivals FROM tweakit_perf_db.flights.flightperformance GROUP BY dest ), totaltraffic AS ( SELECT COALESCE(d.airport, a.airport) AS airport, COALESCE(departures, 0) + COALESCE(arrivals, 0) AS total_traffic FROM departuretraffic AS d FULL OUTER JOIN arrivaltraffic AS a ON d.airport = a.airport ) SELECT airport, total_traffic FROM totaltraffic ORDER BY total_traffic DESC LIMIT 5
  comparison_rules:
    - columns:
        - '*'
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_14:
  query_name: flights_14
  question: How have flight volumes and delays (arrival delay and depature delays) changed Year-over-Year for each Carrier? Average delay should be computed as the sum of arrival delay and departure delay. It should not be computed as the average of two values. Display uniquecarrier, year, this_year_vol, yearly_change, yaerly_change_delay.
  golden_query: SELECT UNIQUECARRIER, YEAR, THIS_YEAR_VOL, (THIS_YEAR_VOL - PREV_YEAR_VOL) AS YEARLY_CHANGE, (THIS_YEAR_DELAY - PREV_YEAR_AVG_DELAY) AS YEARLY_CHANGE_DELAY FROM (SELECT UNIQUECARRIER, YEAR, COUNT(*) AS THIS_YEAR_VOL, LAG(COUNT(*)) OVER(PARTITION BY UNIQUECARRIER ORDER BY YEAR) AS PREV_YEAR_VOL, AVG(ARRDELAY + DEPDELAY) AS THIS_YEAR_DELAY, LAG(AVG(ARRDELAY + DEPDELAY)) OVER (PARTITION BY UNIQUECARRIER ORDER BY YEAR) AS PREV_YEAR_AVG_DELAY FROM FLIGHTPERFORMANCE GROUP BY UNIQUECARRIER, YEAR);
  comparison_rules:
    - columns:
        - '*'
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_15:
  query_name: flights_15
  question: Which Airlines Have the Highest Frequency of Cancellations? Display as carrier, total_cancelled.
  golden_query: select uniquecarrier, sum(case when CANCELLED=1 then 1 else 0 end) as total_cancelled from FLIGHTPERFORMANCE group by uniquecarrier order by total_cancelled desc;
  comparison_rules:
    - columns:
        - total_cancelled
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_16:
  query_name: flights_16
  question: Are there specific months or seasons with higher cancellation rates? Sort by cancellation rates?
  golden_query: WITH monthlycancellation AS ( SELECT month, COUNT(*) AS total_flights, SUM(CASE WHEN cancelled = 1 THEN 1 ELSE 0 END) AS cancelled_flights FROM tweakit_perf_db.flights.flightperformance GROUP BY month ), cancellationrates AS ( SELECT month, ( cancelled_flights * 100.0 ) / NULLIF(total_flights, 0) AS cancellation_rate FROM monthlycancellation ) SELECT month, cancellation_rate FROM cancellationrates ORDER BY cancellation_rate DESC
  comparison_rules:
    - columns:
        - month
        - cancellation_rate
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_17:
  query_name: flights_17
  question: What times of day have the highest number of arrival delays? Do not include departure delays. Display as hourofday, num_delays
  golden_query: SELECT LPAD(CAST(crsarrtime / 100 AS INT), 2, '0') AS hourofday, count(arrdelay) AS num_delays FROM tweakit_perf_db.flights.flightperformance AS fp WHERE arrdelay > 0 GROUP BY LPAD(CAST(crsarrtime / 100 AS INT), 2, '0') ORDER BY num_delays DESC
  comparison_rules:
    - columns:
        - hourofday
        - num_delays
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_18:
  query_name: flights_18
  question: Are there specific state or country destinations that experience more delays? Display as state, country, average_delay.
  golden_query: WITH destinationdelays AS ( SELECT dest, AVG(arrdelay) AS avg_delay FROM tweakit_perf_db.flights.flightperformance GROUP BY dest ), statecountrydelays AS ( SELECT state, country, avg_delay FROM destinationdelays AS d INNER JOIN tweakit_perf_db.flights.airports AS a ON dest = iata ) SELECT state, country, AVG(avg_delay) AS average_delay FROM statecountrydelays AS sc GROUP BY state, country ORDER BY average_delay DESC
  comparison_rules:
    - columns:
        - state
        - country
        - total_delays
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_19:
  query_name: flights_19
  question: Which carriers have the best on-time performance? Include arrival and departure delays. Display as carrier name and performance_rank
  golden_query: WITH carrierperformance AS ( SELECT uniquecarrier, AVG(arrdelay) AS avg_arrival_delay, AVG(depdelay) AS avg_departure_delay FROM tweakit_perf_db.flights.flightperformance AS fp GROUP BY uniquecarrier ), rankedcarriers AS ( SELECT uniquecarrier, ROW_NUMBER() OVER (ORDER BY ( avg_arrival_delay + avg_departure_delay )) AS performance_rank FROM carrierperformance AS cp ) SELECT description AS carrier_name, performance_rank FROM rankedcarriers AS rc INNER JOIN tweakit_perf_db.flights.carriers AS c ON uniquecarrier = code ORDER BY performance_rank
  comparison_rules:
    - columns:
        - carrier_name
        - performance_rank
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights
flights_20:
  query_name: flights_20
  question: Which airports have the highest frequency of delayed flights? Show me the top airport alone. Display as airport_code, delayed_count.
  golden_query: WITH delayedflights AS ( SELECT origin AS airport_code, COUNT(*) AS delayed_count FROM tweakit_perf_db.flights.flightperformance AS fp WHERE arrdelay > 0 OR depdelay > 0 GROUP BY origin ), rankedairports AS ( SELECT airport_code, delayed_count, RANK() OVER (ORDER BY delayed_count DESC) AS rank FROM delayedflights AS df ) SELECT airport_code, delayed_count FROM rankedairports AS ra WHERE rank = 1
  comparison_rules:
    - columns:
        - airport_code
        - delayed_count
      match: exact
  auto_select_schema: 'false'
  schemas:
    - flights